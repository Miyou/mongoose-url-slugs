{"name":"Mongoose URL Slugs","tagline":"Create URL compatiable slugs on mongoose models, ensuring uniqueness.","body":"# Mongoose URL Slugs\r\n\r\nA simple URL based slugs generation for mongoose models.\r\n\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install mongoose-url-slugs\r\n```\r\n\r\n\r\n## Example Usage\r\n\r\n\r\n### Example 1: Using default options and using 2 fields for slug generation.\r\n\r\n```js\r\nvar mongoose = require('mongoose'),\r\n    Schema = mongoose.Schema,\r\n    URLSlugs = require('mongoose-url-slugs');\r\n\r\nvar testSchema = new Schema({\r\n  first_name: {type: String, default: '', trim: true},\r\n  last_name: {type: String, default: '', trim: true},\r\n  rev: {type: String, default: '', trim: true}\r\n});\r\n\r\ntestSchema.plugin(URLSlugs('first_name last_name'));\r\n```\r\n\r\n### Example 2: Using 'myslug' key for storing slug.\r\n\r\n```js\r\nvar mongoose = require('mongoose'),\r\n    Schema = mongoose.Schema,\r\n    URLSlugs = require('mongoose-url-slugs');\r\n\r\nvar testSchema = new Schema({\r\n  first_name: {type: String, default: '', trim: true},\r\n  last_name: {type: String, default: '', trim: true},\r\n  rev: {type: String, default: '', trim: true}\r\n});\r\n\r\n// Save slugs to 'myslug' field.\r\ntestSchema.plugin(URLSlugs('first_name last_name', {field: 'myslug'}));\r\n```\r\n\r\n\r\n## Defaults and Configurables\r\n\r\n* **field** (Default: 'slug') - Parts that are uploaded simultaneously.\r\n* **addField** (Default: True) - Add slug field to mongoose schema.\r\n* **separator** (Default: '-') - Separator to use for invalid characters.\r\n* **generator(text, separator)** (Default: lowercases and then replaces all alphanumeric characters to separators) - Function to generate slug.\r\n* **update** (Default: false) - Update slug when slug building fields change.\r\n* **index** (Default: true) - Mark slug field as index in mongoose schema.\r\n* **index_type** (Default: String) - Mongoose schema slug index type.\r\n* **index_default** (Default: '') - Mongoose schema slug index default value.\r\n* **index_trim** (Default: True) - Mongoose schema slug index trim value.\r\n* **index_unique** (Default: True) - Mongoose schema slug index unique value.\r\n* **index_required** (Default: True) - Mongoose schema slug index required value.\r\n\r\n\r\n## History\r\n\r\n* v0.0.6 (2014-06-10) -- incremented slug generation bug fix and minor optimizations.\r\n* v0.0.5 (2014-06-10) -- Initial release.\r\n\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Talha Asad\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.","google":"UA-49019483-1","note":"Don't delete this file! It's used internally to help with page regeneration."}